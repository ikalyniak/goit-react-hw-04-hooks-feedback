{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","App.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["module","exports","Section","title","children","className","styles","section","FeedbackOptions","options","onLeaveFeedback","list","map","option","item","type","name","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","grade","gradeCategory","gradeRating","Notification","message","prototype","PropTypes","string","isRequired","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","state","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,YAAc,kC,iBCAlFD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,kC,kBCArGD,EAAOC,QAAU,CAAC,MAAQ,yB,kBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,IAAM,mB,8ICgBTC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACGJ,GAAS,oBAAIE,UAAWC,IAAOH,MAAtB,SAA8BA,IACvCC,M,gBCoBQI,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,oBAAIL,UAAWC,IAAOK,KAAtB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,oBAAiBR,UAAWC,IAAOQ,KAAnC,SACE,wBACEC,KAAK,SACLC,KAAMH,EACNR,UAAWC,IAAOW,OAClBC,QAASR,EAJX,SAMGG,KAPIA,S,gBC0CFM,MA9Cf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAInB,UAAWC,IAAOK,KAAtB,UACE,oBAAIN,UAAWC,IAAOQ,KAAtB,SACE,oBAAGT,UAAWC,IAAOmB,MAArB,UACE,sBAAMpB,UAAWC,IAAOoB,cAAxB,oBACA,sBAAMrB,UAAWC,IAAOqB,YAAxB,SAAsCP,SAG1C,oBAAIf,UAAWC,IAAOQ,KAAtB,SACE,oBAAGT,UAAWC,IAAOmB,MAArB,UACE,sBAAMpB,UAAWC,IAAOoB,cAAxB,uBACA,sBAAMrB,UAAWC,IAAOqB,YAAxB,SAAsCN,SAG1C,oBAAIhB,UAAWC,IAAOQ,KAAtB,SACE,oBAAGT,UAAWC,IAAOmB,MAArB,UACE,sBAAMpB,UAAWC,IAAOoB,cAAxB,mBACA,sBAAMrB,UAAWC,IAAOqB,YAAxB,SAAsCL,SAI1C,oBAAIjB,UAAWC,IAAOQ,KAAtB,SACE,oBAAGT,UAAWC,IAAOmB,MAArB,UACE,sBAAMpB,UAAWC,IAAOoB,cAAxB,qBACA,sBAAMrB,UAAWC,IAAOqB,YAAxB,SAAsCJ,SAG1C,oBAAIlB,UAAWC,IAAOQ,KAAtB,SACE,oBAAGT,UAAWC,IAAOmB,MAArB,UACE,sBAAMpB,UAAWC,IAAOoB,cAAxB,iCACA,uBAAMrB,UAAWC,IAAOqB,YAAxB,UAAsCH,EAAtC,gB,gCC/BV,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGxB,UAAWC,IAAOuB,QAArB,SAA+BA,IAGxCD,EAAaE,UAAY,CACvBD,QAASE,IAAUC,OAAOC,YAGbL,Q,iBCFA,SAASM,IACtB,IAEA,EAAwBC,mBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOb,EAAP,KAAYgB,EAAZ,KAuBMC,EAAqB,kBAAMnB,EAAOC,EAAUC,GAKlD,OACE,sBAAKjB,UAAWC,IAAO4B,IAAvB,UACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBM,QAnCP,CAAC,OAAQ,UAAW,OAmCKC,gBA7BjB,SAAA8B,GAGtB,OAFiBA,EAAMC,OAAfzB,MAGN,IAAK,OACHoB,GAAQ,SAAAM,GAAK,OAAIA,EAAQ,KACzB,MAEF,IAAK,UACHL,GAAW,SAAAK,GAAK,OAAIA,EAAQ,KAC5B,MAEF,IAAK,MACHJ,GAAO,SAAAI,GAAK,OAAIA,EAAQ,KACxB,MAEF,QACE,aAewB,IAAzBH,KACC,cAAC,EAAD,CAASpC,MAAM,aAAf,SACE,cAAC,EAAD,CACEiB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,IACPf,mBAfRmB,KAAKC,MAAc,IAAPxB,EAAcmB,SAoBE,IAAzBA,KACC,cAAC,EAAD,CAAcV,QAAQ,yBCvD9BgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,W","file":"static/js/main.7f91fc8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradeCategory\":\"Statistics_gradeCategory__1luSD\",\"gradeRating\":\"Statistics_gradeRating__2fRNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2lRUp\",\"item\":\"FeedbackOptions_item__2mlJF\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={styles.list}>\n      {options.map(option => (\n        <li key={option} className={styles.item}>\n          <button\n            type=\"button\"\n            name={option}\n            className={styles.button}\n            onClick={onLeaveFeedback}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className={styles.list}>\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Good: </span>\n          <span className={styles.gradeRating}>{good}</span>\n        </p>\n      </li>\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Neutral: </span>\n          <span className={styles.gradeRating}>{neutral}</span>\n        </p>\n      </li>\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Bad: </span>\n          <span className={styles.gradeRating}>{bad}</span>\n        </p>\n      </li>\n\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Total: </span>\n          <span className={styles.gradeRating}>{total}</span>\n        </p>\n      </li>\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Positive feedback: </span>\n          <span className={styles.gradeRating}>{positivePercentage}%</span>\n        </p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={styles.message}>{message}</p>;\n}\n\nNotification.prototype = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\nimport styles from './App.module.css';\n\nexport default function App() {\n  const options = ['good', 'neutral', 'bad'];\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = event => {\n    const { name } = event.target;\n\n    switch (name) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () =>\n    Math.round((good * 100) / countTotalFeedback());\n\n  return (\n    <div className={styles.App}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n\n      {countTotalFeedback() !== 0 && (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      )}\n\n      {countTotalFeedback() !== 0 || (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n}\n\nApp.propTypes = {\n  stats: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    options: PropTypes.array.isRequired,\n  }),\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}